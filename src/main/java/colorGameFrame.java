
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Clare
 */
public class colorGameFrame extends javax.swing.JFrame {

    private static int rounds;
    private static int score;
    
    // Creating random number generator for text and buttons colors
    private static Random rand;
    private static int random_text;
    private static int random_text_color;
    private static int random_button_color;
    private static String text_color;
    
    /**
     * Creates new form colorGameFrame
     */
    public colorGameFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(colorGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(colorGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(colorGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(colorGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new colorGameFrame().setVisible(true);
            }
        });
    }
    

    public static void colorGameFrame() {
        JFrame colorGame = new JFrame("Color Game"); //Creates frame
        colorGame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        rounds = 5;
        score = 500;
        rand = new Random();
        random_text = rand.nextInt(5) + 1;
        random_text_color = rand.nextInt(5) + 1;
        random_button_color = rand.nextInt(5) + 1;
        text_color = "";
        
        basic g = new basic();
        
        //Default button dimensions
        int width = 100;
        int height = 100;
        
        //label and buttons position bounds for random positioning
        int second_column_x_min_bound = 200;
        int third_column_x_min_bound = 400;
        int mid_y_bound = 200;
        
        //Get a random text for label
        switch(random_text) {
            case 1: text_color = "BLUE";
            case 2: text_color = "GREEN";
            case 3: text_color = "RED";
            case 4: text_color = "YELLOW";
            case 5: text_color = "PINK";
        }
        
        //Get a random color for label
        JLabel color = new JLabel(text_color);
        switch(random_text_color) {
            case 1: color.setForeground(Color.BLUE);
            case 2: color.setForeground(Color.GREEN);
            case 3: color.setForeground(Color.RED);
            case 4: color.setForeground(Color.YELLOW);
            case 5: color.setForeground(Color.PINK);
        }

        color.setFont(new Font("Verdana", Font.BOLD, 18));
        Dimension size = color.getPreferredSize();
        color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height);
        
        //Size for all buttons
        int button_size_r = 50;
        
        JButton button1 = new JButton();
        JButton button2 = new JButton();
        JButton button3 = new JButton();
        JButton button4 = new JButton();
        JButton button5 = new JButton();
        
        switch(random_button_color) {
            case 1: button1.setBackground(Color.BLUE);
                    button2.setBackground(Color.GREEN);
                    button3.setBackground(Color.RED);
                    button4.setBackground(Color.YELLOW);
                    button5.setBackground(Color.PINK);
            case 2: button1.setBackground(Color.GREEN);
                    button2.setBackground(Color.RED);
                    button3.setBackground(Color.YELLOW);
                    button4.setBackground(Color.PINK);
                    button5.setBackground(Color.BLUE);
            case 3: button1.setBackground(Color.RED);
                    button2.setBackground(Color.YELLOW);
                    button3.setBackground(Color.PINK);
                    button4.setBackground(Color.BLUE);
                    button5.setBackground(Color.GREEN);
            case 4: button1.setBackground(Color.YELLOW);
                    button2.setBackground(Color.PINK);
                    button3.setBackground(Color.BLUE);
                    button4.setBackground(Color.GREEN);
                    button5.setBackground(Color.RED);
            case 5: button1.setBackground(Color.PINK);
                    button2.setBackground(Color.BLUE);
                    button3.setBackground(Color.GREEN);
                    button4.setBackground(Color.RED);
                    button5.setBackground(Color.YELLOW);
        }
        
        
        button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
        button1.addMouseListener(new MouseAdapter() {
            public void mouseEntered() {
                button1.setBackground(button1.getBackground().brighter());
            }
            public void mouseExited() {
                button1.setBackground(button1.getBackground().darker());
            }
        });
        button1.addActionListener(new ActionListener() {   //Adds action listeners to button
            public void actionPerformed(ActionEvent e) {
                if (!button1.getBackground().equals(color.getBackground()))
                    score -= 100;
                if (--rounds == 0) {
                    gameOverFrame.gameOverFrame(score);
                    colorGame.dispose();
                }
                
                random_text = rand.nextInt(5) + 1;
                random_text_color = rand.nextInt(5) + 1;
                random_button_color = rand.nextInt(5) + 1;
                
                switch(random_text) {
                    case 1: color.setText("BLUE");
                    case 2: color.setText("GREEN");
                    case 3: color.setText("RED");
                    case 4: color.setText("YELLOW");
                    case 5: color.setText("PINK");
                }
        
                switch(random_text_color) {
                    case 1: color.setForeground(Color.BLUE);
                    case 2: color.setForeground(Color.GREEN);
                    case 3: color.setForeground(Color.RED);
                    case 4: color.setForeground(Color.YELLOW);
                    case 5: color.setForeground(Color.PINK);
                }
                
                switch(random_button_color) {
                    case 1: button1.setBackground(Color.BLUE);
                            button2.setBackground(Color.GREEN);
                            button3.setBackground(Color.RED);
                            button4.setBackground(Color.YELLOW);
                            button5.setBackground(Color.PINK);
                    case 2: button1.setBackground(Color.GREEN);
                            button2.setBackground(Color.RED);
                            button3.setBackground(Color.YELLOW);
                            button4.setBackground(Color.PINK);
                            button5.setBackground(Color.BLUE);
                    case 3: button1.setBackground(Color.RED);
                            button2.setBackground(Color.YELLOW);
                            button3.setBackground(Color.PINK);
                            button4.setBackground(Color.BLUE);
                            button5.setBackground(Color.GREEN);
                    case 4: button1.setBackground(Color.YELLOW);
                            button2.setBackground(Color.PINK);
                            button3.setBackground(Color.BLUE);
                            button4.setBackground(Color.GREEN);
                            button5.setBackground(Color.RED);
                    case 5: button1.setBackground(Color.PINK);
                            button2.setBackground(Color.BLUE);
                            button3.setBackground(Color.GREEN);
                            button4.setBackground(Color.RED);
                            button5.setBackground(Color.YELLOW);
                }
                
                button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height);
            }
        });
        
        
        button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
        button2.addMouseListener(new MouseAdapter() {
            public void mouseEntered() {
                button5.setBackground(button2.getBackground().brighter());
            }
            public void mouseExited() {
                button2.setBackground(button2.getBackground().darker());
            }
        });
        button2.addActionListener(new ActionListener() {   //Adds action listeners to button
            public void actionPerformed(ActionEvent e) {
               if (!button1.getBackground().equals(color.getBackground()))
                    score -= 100;
                if (--rounds == 0) {
                    gameOverFrame.gameOverFrame(score);
                    colorGame.dispose();
                }
                
                random_text = rand.nextInt(5) + 1;
                random_text_color = rand.nextInt(5) + 1;
                random_button_color = rand.nextInt(5) + 1;
                
                switch(random_text) {
                    case 1: color.setText("BLUE");
                    case 2: color.setText("GREEN");
                    case 3: color.setText("RED");
                    case 4: color.setText("YELLOW");
                    case 5: color.setText("PINK");
                }
        
                switch(random_text_color) {
                    case 1: color.setForeground(Color.BLUE);
                    case 2: color.setForeground(Color.GREEN);
                    case 3: color.setForeground(Color.RED);
                    case 4: color.setForeground(Color.YELLOW);
                    case 5: color.setForeground(Color.PINK);
                }
                
                switch(random_button_color) {
                    case 1: button1.setBackground(Color.BLUE);
                            button2.setBackground(Color.GREEN);
                            button3.setBackground(Color.RED);
                            button4.setBackground(Color.YELLOW);
                            button5.setBackground(Color.PINK);
                    case 2: button1.setBackground(Color.GREEN);
                            button2.setBackground(Color.RED);
                            button3.setBackground(Color.YELLOW);
                            button4.setBackground(Color.PINK);
                            button5.setBackground(Color.BLUE);
                    case 3: button1.setBackground(Color.RED);
                            button2.setBackground(Color.YELLOW);
                            button3.setBackground(Color.PINK);
                            button4.setBackground(Color.BLUE);
                            button5.setBackground(Color.GREEN);
                    case 4: button1.setBackground(Color.YELLOW);
                            button2.setBackground(Color.PINK);
                            button3.setBackground(Color.BLUE);
                            button4.setBackground(Color.GREEN);
                            button5.setBackground(Color.RED);
                    case 5: button1.setBackground(Color.PINK);
                            button2.setBackground(Color.BLUE);
                            button3.setBackground(Color.GREEN);
                            button4.setBackground(Color.RED);
                            button5.setBackground(Color.YELLOW);
                }
                
                button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height); 
            }
        });
        
        
        button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
        button3.addMouseListener(new MouseAdapter() {
            public void mouseEntered() {
                button3.setBackground(button3.getBackground().brighter());
            }
            public void mouseExited() {
                button3.setBackground(button3.getBackground().darker());
            }
        });
        button3.addActionListener(new ActionListener() {   //Adds action listeners to button
            public void actionPerformed(ActionEvent e) {
                if (!button1.getBackground().equals(color.getBackground()))
                    score -= 100;
                if (--rounds == 0) {
                    gameOverFrame.gameOverFrame(score);
                    colorGame.dispose();
                }
                
                random_text = rand.nextInt(5) + 1;
                random_text_color = rand.nextInt(5) + 1;
                random_button_color = rand.nextInt(5) + 1;
                
                switch(random_text) {
                    case 1: color.setText("BLUE");
                    case 2: color.setText("GREEN");
                    case 3: color.setText("RED");
                    case 4: color.setText("YELLOW");
                    case 5: color.setText("PINK");
                }
        
                switch(random_text_color) {
                    case 1: color.setForeground(Color.BLUE);
                    case 2: color.setForeground(Color.GREEN);
                    case 3: color.setForeground(Color.RED);
                    case 4: color.setForeground(Color.YELLOW);
                    case 5: color.setForeground(Color.PINK);
                }
                
                switch(random_button_color) {
                    case 1: button1.setBackground(Color.BLUE);
                            button2.setBackground(Color.GREEN);
                            button3.setBackground(Color.RED);
                            button4.setBackground(Color.YELLOW);
                            button5.setBackground(Color.PINK);
                    case 2: button1.setBackground(Color.GREEN);
                            button2.setBackground(Color.RED);
                            button3.setBackground(Color.YELLOW);
                            button4.setBackground(Color.PINK);
                            button5.setBackground(Color.BLUE);
                    case 3: button1.setBackground(Color.RED);
                            button2.setBackground(Color.YELLOW);
                            button3.setBackground(Color.PINK);
                            button4.setBackground(Color.BLUE);
                            button5.setBackground(Color.GREEN);
                    case 4: button1.setBackground(Color.YELLOW);
                            button2.setBackground(Color.PINK);
                            button3.setBackground(Color.BLUE);
                            button4.setBackground(Color.GREEN);
                            button5.setBackground(Color.RED);
                    case 5: button1.setBackground(Color.PINK);
                            button2.setBackground(Color.BLUE);
                            button3.setBackground(Color.GREEN);
                            button4.setBackground(Color.RED);
                            button5.setBackground(Color.YELLOW);
                }
                
                button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height);
            }
        });
        
        
        button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
        button4.addMouseListener(new MouseAdapter() {
            public void mouseEntered() {
                button4.setBackground(button4.getBackground().brighter());
            }
            public void mouseExited() {
                button4.setBackground(button4.getBackground().darker());
            }
        });
        button4.addActionListener(new ActionListener() {   //Adds action listeners to button
            public void actionPerformed(ActionEvent e) {
                if (!button1.getBackground().equals(color.getBackground()))
                    score -= 100;
                if (--rounds == 0) {
                    gameOverFrame.gameOverFrame(score);
                    colorGame.dispose();
                }
                
                random_text = rand.nextInt(5) + 1;
                random_text_color = rand.nextInt(5) + 1;
                random_button_color = rand.nextInt(5) + 1;
                
                switch(random_text) {
                    case 1: color.setText("BLUE");
                    case 2: color.setText("GREEN");
                    case 3: color.setText("RED");
                    case 4: color.setText("YELLOW");
                    case 5: color.setText("PINK");
                }
        
                switch(random_text_color) {
                    case 1: color.setForeground(Color.BLUE);
                    case 2: color.setForeground(Color.GREEN);
                    case 3: color.setForeground(Color.RED);
                    case 4: color.setForeground(Color.YELLOW);
                    case 5: color.setForeground(Color.PINK);
                }
                
                switch(random_button_color) {
                    case 1: button1.setBackground(Color.BLUE);
                            button2.setBackground(Color.GREEN);
                            button3.setBackground(Color.RED);
                            button4.setBackground(Color.YELLOW);
                            button5.setBackground(Color.PINK);
                    case 2: button1.setBackground(Color.GREEN);
                            button2.setBackground(Color.RED);
                            button3.setBackground(Color.YELLOW);
                            button4.setBackground(Color.PINK);
                            button5.setBackground(Color.BLUE);
                    case 3: button1.setBackground(Color.RED);
                            button2.setBackground(Color.YELLOW);
                            button3.setBackground(Color.PINK);
                            button4.setBackground(Color.BLUE);
                            button5.setBackground(Color.GREEN);
                    case 4: button1.setBackground(Color.YELLOW);
                            button2.setBackground(Color.PINK);
                            button3.setBackground(Color.BLUE);
                            button4.setBackground(Color.GREEN);
                            button5.setBackground(Color.RED);
                    case 5: button1.setBackground(Color.PINK);
                            button2.setBackground(Color.BLUE);
                            button3.setBackground(Color.GREEN);
                            button4.setBackground(Color.RED);
                            button5.setBackground(Color.YELLOW);
                }
                
                button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height);
            }
        });
        
        
        button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
        button5.addMouseListener(new MouseAdapter() {
            public void mouseEntered() {
                button5.setBackground(button5.getBackground().brighter());
            }
            public void mouseExited() {
                button5.setBackground(button5.getBackground().darker());
            }
        });
        button5.addActionListener(new ActionListener() {   //Adds action listeners to button
            public void actionPerformed(ActionEvent e) {
                if (!button1.getBackground().equals(color.getBackground()))
                    score -= 100;
                if (--rounds == 0) {
                    gameOverFrame.gameOverFrame(score);
                    colorGame.dispose();
                }
                
                random_text = rand.nextInt(5) + 1;
                random_text_color = rand.nextInt(5) + 1;
                random_button_color = rand.nextInt(5) + 1;
                
                switch(random_text) {
                    case 1: color.setText("BLUE");
                    case 2: color.setText("GREEN");
                    case 3: color.setText("RED");
                    case 4: color.setText("YELLOW");
                    case 5: color.setText("PINK");
                }
        
                switch(random_text_color) {
                    case 1: color.setForeground(Color.BLUE);
                    case 2: color.setForeground(Color.GREEN);
                    case 3: color.setForeground(Color.RED);
                    case 4: color.setForeground(Color.YELLOW);
                    case 5: color.setForeground(Color.PINK);
                }
                
                switch(random_button_color) {
                    case 1: button1.setBackground(Color.BLUE);
                            button2.setBackground(Color.GREEN);
                            button3.setBackground(Color.RED);
                            button4.setBackground(Color.YELLOW);
                            button5.setBackground(Color.PINK);
                    case 2: button1.setBackground(Color.GREEN);
                            button2.setBackground(Color.RED);
                            button3.setBackground(Color.YELLOW);
                            button4.setBackground(Color.PINK);
                            button5.setBackground(Color.BLUE);
                    case 3: button1.setBackground(Color.RED);
                            button2.setBackground(Color.YELLOW);
                            button3.setBackground(Color.PINK);
                            button4.setBackground(Color.BLUE);
                            button5.setBackground(Color.GREEN);
                    case 4: button1.setBackground(Color.YELLOW);
                            button2.setBackground(Color.PINK);
                            button3.setBackground(Color.BLUE);
                            button4.setBackground(Color.GREEN);
                            button5.setBackground(Color.RED);
                    case 5: button1.setBackground(Color.PINK);
                            button2.setBackground(Color.BLUE);
                            button3.setBackground(Color.GREEN);
                            button4.setBackground(Color.RED);
                            button5.setBackground(Color.YELLOW);
                }
                
                button1.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button2.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button3.setBounds(rand.nextInt(second_column_x_min_bound - button_size_r - 1) + 200 + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                button4.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + button_size_r/2, button_size_r, button_size_r);
                button5.setBounds(rand.nextInt(third_column_x_min_bound - button_size_r + 200 - 1) + button_size_r/2 + 1,
                          rand.nextInt(mid_y_bound - button_size_r) + 200 + button_size_r/2, button_size_r, button_size_r);
                color.setBounds(rand.nextInt(second_column_x_min_bound - size.width - 1) + 200 + 1,
                        rand.nextInt(mid_y_bound) + size.height + 1, size.width, size.height);
            }
        });
        
        
        //Creating clock
        JLabel clock = new JLabel();
        Timer timer = new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                clock.setText(DateFormat.getDateTimeInstance().format(new Date()));
            }
        });
        
        timer.setRepeats(true);
        timer.setInitialDelay(0);
        timer.start();
        
        clock.setFont(new Font("Verdana", Font.BOLD, 12));
        clock.setForeground(Color.BLACK);
        clock.setBounds(400, 5, 300, 30);
        
        //Adds elements to frame
        colorGame.add(clock);
        colorGame.add(button1);
        colorGame.add(button2);
        colorGame.add(button3);
        colorGame.add(button4);
        colorGame.add(button5);
        colorGame.add(color);
        
        //Draws background on frame and makes it visible
        colorGame.add(g);
        colorGame.pack();
        colorGame.setVisible(true);
        colorGame.setLocationRelativeTo(null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}